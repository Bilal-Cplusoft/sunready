{
    "swagger": "2.0",
    "info": {
        "description": "API for Sun Ready project management system",
        "title": "Sun Ready API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@sunready.com"
        },
        "license": {
            "name": "Sun Ready Private License",
            "url": "INTERNAL"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/companies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all companies with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "List all companies",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by referred by user ID",
                        "name": "referred_by_user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompaniesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new company with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Create a new company",
                "parameters": [
                    {
                        "description": "Company details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/companies/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new company and migrates the main user and their descendants to it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Add company with user migration",
                "parameters": [
                    {
                        "description": "Company and user details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AddCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/companies/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all companies without pagination with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get all companies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by referred by user ID",
                        "name": "referred_by_user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompaniesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/companies/slug/{slug}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a company by its slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get company by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/companies/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a company by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get company by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a company's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Update company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company update details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a company by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Delete company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/leads": {
            "get": {
                "description": "Retrieves a paginated list of leads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "List leads",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by company ID",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by creator ID",
                        "name": "creator_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter leads with 3D models",
                        "name": "has_3d_model",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of items to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new lead and optionally initiates 3D model generation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "Create a new lead",
                "parameters": [
                    {
                        "description": "Lead details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CreateLead"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns lead and house IDs",
                        "schema": {
                            "$ref": "#/definitions/handler.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/leads/{id}": {
            "get": {
                "description": "Retrieves a lead by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "Get a lead by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LeadResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "Update a lead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lead updates",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a lead by ID",
                "tags": [
                    "leads"
                ],
                "summary": "Delete a lead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/otp/send": {
            "get": {
                "description": "Sends a one-time password (OTP) via SMS to the specified phone number using Twilio.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Send OTP to a phone number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number with country code (e.g. +923001234567)",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid phone parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send OTP",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/otp/verify": {
            "get": {
                "description": "Verifies a one-time password (OTP) sent to a phone number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Verify an OTP code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number with country code (e.g. +923001234567)",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OTP code received via SMS",
                        "name": "otp",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters / OTP verification failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/quote": {
            "post": {
                "description": "Takes input parameters for a solar system and returns a detailed quote with costs, savings, and payback period.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quote"
                ],
                "summary": "Calculate solar quote",
                "parameters": [
                    {
                        "description": "Quote input payload",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.QuoteInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QuoteResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to calculate quote",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AddCompanyRequest": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string",
                    "example": "New Solar Company"
                },
                "main_user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "handler.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {}
            }
        },
        "handler.CompaniesResponse": {
            "type": "object",
            "properties": {
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Company"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.CompanyResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/models.Company"
                }
            }
        },
        "handler.CreateCompanyRequest": {
            "type": "object",
            "properties": {
                "baseline_adder": {
                    "type": "number",
                    "example": 100
                },
                "code": {
                    "type": "string",
                    "example": "ACME"
                },
                "description": {
                    "type": "string",
                    "example": "Leading solar company"
                },
                "display_name": {
                    "type": "string",
                    "example": "Acme Corporation"
                },
                "logo_path": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Acme Corp"
                },
                "sales_commission_default": {
                    "type": "number",
                    "example": 0.1
                },
                "sales_commission_max": {
                    "type": "number",
                    "example": 0.15
                },
                "sales_commission_min": {
                    "type": "number",
                    "example": 0.05
                },
                "slug": {
                    "type": "string",
                    "example": "acme-corp"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "handler.LeadResponse": {
            "type": "object",
            "properties": {
                "house_id": {
                    "type": "integer",
                    "example": 123
                },
                "lead_id": {
                    "type": "integer",
                    "example": 42
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "handler.RegisterRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, Anytown, USA"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "phone": {
                    "type": "string",
                    "example": "555-123-4567"
                }
            }
        },
        "handler.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "baseline": {
                    "type": "number",
                    "example": 1000
                },
                "baseline_adder": {
                    "type": "number",
                    "example": 100
                },
                "baseline_adder_pct_sales_comms": {
                    "type": "integer",
                    "example": 10
                },
                "code": {
                    "type": "string",
                    "example": "ACME"
                },
                "contract_tag": {
                    "type": "string",
                    "example": "STANDARD"
                },
                "description": {
                    "type": "string",
                    "example": "Leading solar company"
                },
                "display_name": {
                    "type": "string",
                    "example": "Acme Corporation"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "logo_path": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Acme Corp"
                },
                "sales_commission_default": {
                    "type": "number",
                    "example": 0.1
                },
                "sales_commission_max": {
                    "type": "number",
                    "example": 0.15
                },
                "sales_commission_min": {
                    "type": "number",
                    "example": 0.05
                },
                "slug": {
                    "type": "string",
                    "example": "acme-corp"
                }
            }
        },
        "models.Company": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "type": "integer",
                    "example": 1
                },
                "baseline": {
                    "type": "number",
                    "example": 1000
                },
                "baseline_adder": {
                    "type": "number",
                    "example": 100
                },
                "baseline_adder_pct_sales_comms": {
                    "type": "integer",
                    "example": 10
                },
                "code": {
                    "type": "string",
                    "example": "ACME"
                },
                "contract_tag": {
                    "type": "string",
                    "example": "STANDARD"
                },
                "created_at": {
                    "type": "string"
                },
                "credits": {
                    "type": "integer",
                    "example": 1000
                },
                "custom_commissions": {
                    "type": "boolean",
                    "example": false
                },
                "description": {
                    "type": "string",
                    "example": "Leading solar company"
                },
                "display_name": {
                    "type": "string",
                    "example": "Acme Corporation"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "logo_path": {
                    "type": "string",
                    "example": "https://example.com/logo.png"
                },
                "name": {
                    "type": "string",
                    "example": "Acme Corp"
                },
                "pricing_mode": {
                    "type": "integer",
                    "example": 0
                },
                "referred_by_user_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_commission_default": {
                    "type": "number",
                    "example": 0.1
                },
                "sales_commission_max": {
                    "type": "number",
                    "example": 0.15
                },
                "sales_commission_min": {
                    "type": "number",
                    "example": 0.05
                },
                "slug": {
                    "type": "string",
                    "example": "acme-corp"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "service.CreateLead": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Solar St, San Francisco, CA 94102"
                },
                "city": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "consumption": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "creator_id": {
                    "type": "integer",
                    "example": 1
                },
                "hardware_type": {
                    "type": "string"
                },
                "homeowner_email": {
                    "type": "string"
                },
                "homeowner_name": {
                    "type": "string"
                },
                "homeowner_phone": {
                    "type": "string"
                },
                "kwh_usage": {
                    "type": "number",
                    "example": 12000
                },
                "latitude": {
                    "type": "number",
                    "example": 37.7749
                },
                "longitude": {
                    "type": "number",
                    "example": -122.4194
                },
                "lse_id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "panel_count": {
                    "type": "integer",
                    "example": 30
                },
                "period": {
                    "type": "string"
                },
                "sales_rep_email": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "system_size": {
                    "type": "number",
                    "example": 10.5
                },
                "target_solar_offset": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "service.QuoteInput": {
            "type": "object",
            "properties": {
                "annualProductionKWh": {
                    "type": "number",
                    "format": "float64"
                },
                "annualUtilityIncrease": {
                    "type": "number",
                    "format": "float64"
                },
                "costPerWatt": {
                    "type": "number",
                    "format": "float64"
                },
                "electricalOffsetPct": {
                    "type": "number",
                    "format": "float64"
                },
                "federalTaxCredit": {
                    "type": "number",
                    "format": "float64"
                },
                "loanInterestRate": {
                    "type": "number",
                    "format": "float64"
                },
                "loanTermYears": {
                    "type": "integer"
                },
                "monthlyElectricBill": {
                    "type": "number",
                    "format": "float64"
                },
                "panelCount": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "systemSizeKW": {
                    "type": "number",
                    "format": "float64"
                },
                "utilityRatePerKWh": {
                    "type": "number",
                    "format": "float64"
                }
            }
        },
        "service.QuoteResult": {
            "type": "object",
            "properties": {
                "annual_production_kwh": {
                    "type": "number"
                },
                "break_even_year": {
                    "type": "integer"
                },
                "cost_per_watt": {
                    "type": "number"
                },
                "current_monthly_bill": {
                    "type": "number"
                },
                "electrical_offset_pct": {
                    "type": "number"
                },
                "estimated_monthly_payment": {
                    "type": "number"
                },
                "estimated_new_monthly_bill": {
                    "type": "number"
                },
                "federal_tax_credit": {
                    "type": "number"
                },
                "first_year_savings": {
                    "type": "number"
                },
                "monthly_savings": {
                    "type": "number"
                },
                "panel_count": {
                    "type": "integer"
                },
                "simple_payback_years": {
                    "type": "number"
                },
                "summary": {
                    "type": "string"
                },
                "system_cost_after_incentives": {
                    "type": "number"
                },
                "system_cost_before_incentives": {
                    "type": "number"
                },
                "system_size_kw": {
                    "type": "number"
                },
                "twenty_five_year_savings": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}