{
    "swagger": "2.0",
    "info": {
        "description": "API for Sun Ready project",
        "title": "Sun Ready API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@sunready.com"
        },
        "license": {
            "name": "Sun Ready Private License",
            "url": "INTERNAL"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/customers": {
            "get": {
                "description": "Retrieves a list of customers with optional pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "List customers",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search customers by name, email, or address",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new customer in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Create a new customer",
                "parameters": [
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/stats": {
            "get": {
                "description": "Retrieves customer statistics by status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get customer statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.CustomerStats"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{id}": {
            "get": {
                "description": "Retrieves a customer by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Update customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a customer by ID",
                "tags": [
                    "customers"
                ],
                "summary": "Delete customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{id}/status": {
            "patch": {
                "description": "Updates the status of a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Update customer status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateCustomerStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/leads": {
            "get": {
                "description": "Retrieves a paginated list of leads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "List leads",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by customer ID",
                        "name": "customer_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by creator ID",
                        "name": "creator_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of items to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new lead and optionally initiates 3D model generation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "Create a new lead",
                "parameters": [
                    {
                        "description": "Lead details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CreateLead"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns lead and house IDs",
                        "schema": {
                            "$ref": "#/definitions/handler.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/leads/{id}": {
            "get": {
                "description": "Retrieves a lead by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "Get a lead by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LeadResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "Update a lead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lead updates",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LeadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a lead by ID",
                "tags": [
                    "leads"
                ],
                "summary": "Delete a lead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/otp/send": {
            "get": {
                "description": "Sends a one-time password (OTP) via SMS to the specified phone number using Twilio.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Send OTP to a phone number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number with country code (e.g. +923001234567)",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email Address (e.g. test@example.com)",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid phone parameter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to send OTP",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/otp/verify": {
            "get": {
                "description": "Verifies one-time passwords (OTPs) sent to both phone and email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Verify phone and email OTP codes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number with country code (e.g. +923001234567)",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OTP code received via SMS",
                        "name": "sms_otp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email address used for OTP verification",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OTP code received via Email",
                        "name": "email_otp",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "schema": {
                            "$ref": "#/definitions/handler.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters / OTP verification failed",
                        "schema": {
                            "$ref": "#/definitions/handler.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/quote": {
            "post": {
                "description": "Takes input parameters for a solar system and returns a detailed quote with costs, savings, and payback period.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quote"
                ],
                "summary": "Calculate solar quote",
                "parameters": [
                    {
                        "description": "Quote input payload",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.QuoteInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QuoteResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to calculate quote",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Retrieves a paginated list of users for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid company ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch users",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "Retrieves a user by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update payload",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/projects": {
            "post": {
                "description": "Creates a new project record in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create project",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/user": {
            "get": {
                "description": "Retrieves all projects associated with a specific user with pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "List projects by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Results limit (default: 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Results offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Project"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to fetch projects",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Retrieves a project by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get project by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project found",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing project by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated project data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or project ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update project",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a project by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Project deleted successfully"
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete project",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {}
            }
        },
        "handler.CreateCustomerRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, San Francisco, CA 94102"
                },
                "average_monthly_bill": {
                    "type": "number",
                    "example": 150
                },
                "city": {
                    "type": "string",
                    "example": "San Francisco"
                },
                "email": {
                    "type": "string",
                    "example": "john.smith@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "home_ownership_type": {
                    "type": "string",
                    "example": "owner"
                },
                "last_name": {
                    "type": "string",
                    "example": "Smith"
                },
                "lead_id": {
                    "type": "string",
                    "example": "12345"
                },
                "notes": {
                    "type": "string",
                    "example": "Interested in 10kW system"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+1-555-123-4567"
                },
                "preferred_contact_method": {
                    "type": "string",
                    "example": "email"
                },
                "property_type": {
                    "type": "string",
                    "example": "single_family"
                },
                "referral_code": {
                    "type": "string",
                    "example": "FRIEND2024"
                },
                "roof_type": {
                    "type": "string",
                    "example": "asphalt_shingle"
                },
                "state": {
                    "type": "string",
                    "example": "CA"
                },
                "utility_provider": {
                    "type": "string",
                    "example": "PG\u0026E"
                },
                "zip_code": {
                    "type": "string",
                    "example": "94102"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "handler.LeadResponse": {
            "type": "object",
            "properties": {
                "house_id": {
                    "type": "integer",
                    "example": 123
                },
                "lead_id": {
                    "type": "integer",
                    "example": 42
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "handler.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.RegisterRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, Anytown, USA"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "phone": {
                    "type": "string",
                    "example": "555-123-4567"
                },
                "user_type": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "handler.UpdateCustomerRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, San Francisco, CA 94102"
                },
                "average_monthly_bill": {
                    "type": "number",
                    "example": 150
                },
                "city": {
                    "type": "string",
                    "example": "San Francisco"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "home_ownership_type": {
                    "type": "string",
                    "example": "owner"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "last_name": {
                    "type": "string",
                    "example": "Smith"
                },
                "notes": {
                    "type": "string",
                    "example": "Interested in 10kW system"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+1-555-123-4567"
                },
                "preferred_contact_method": {
                    "type": "string",
                    "example": "email"
                },
                "property_type": {
                    "type": "string",
                    "example": "single_family"
                },
                "roof_type": {
                    "type": "string",
                    "example": "asphalt_shingle"
                },
                "state": {
                    "type": "string",
                    "example": "CA"
                },
                "status": {
                    "type": "string",
                    "example": "prospect"
                },
                "utility_provider": {
                    "type": "string",
                    "example": "PG\u0026E"
                },
                "zip_code": {
                    "type": "string",
                    "example": "94102"
                }
            }
        },
        "handler.UpdateCustomerStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "qualified"
                }
            }
        },
        "models.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, San Francisco, CA 94102"
                },
                "average_monthly_bill": {
                    "type": "number",
                    "example": 150
                },
                "city": {
                    "type": "string",
                    "example": "San Francisco"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "john.smith@email.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "home_ownership_type": {
                    "type": "string",
                    "example": "owner"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "last_name": {
                    "type": "string",
                    "example": "Smith"
                },
                "lead_id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string",
                    "example": "Interested in 10kW system"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+1-555-123-4567"
                },
                "preferred_contact_method": {
                    "type": "string",
                    "example": "email"
                },
                "property_type": {
                    "type": "string",
                    "example": "single_family"
                },
                "referral_code": {
                    "type": "string",
                    "example": "FRIEND2024"
                },
                "roof_type": {
                    "type": "string",
                    "example": "asphalt_shingle"
                },
                "state": {
                    "type": "string",
                    "example": "CA"
                },
                "status": {
                    "type": "string",
                    "example": "prospect"
                },
                "updated_at": {
                    "type": "string"
                },
                "utility_provider": {
                    "type": "string",
                    "example": "PG\u0026E"
                },
                "zip_code": {
                    "type": "string",
                    "example": "94102"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_type": {
                    "$ref": "#/definitions/models.UserType"
                }
            }
        },
        "models.UserType": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "UserTypeAdmin",
                "UserTypeCustomer",
                "UserTypeGeneral"
            ]
        },
        "service.CreateLead": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Solar St, San Francisco, CA 94102"
                },
                "city": {
                    "type": "string"
                },
                "consumption": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "creator_id": {
                    "type": "integer",
                    "example": 1
                },
                "hardware_type": {
                    "type": "string"
                },
                "homeowner_email": {
                    "type": "string"
                },
                "homeowner_name": {
                    "type": "string"
                },
                "homeowner_phone": {
                    "type": "string"
                },
                "kwh_usage": {
                    "type": "number",
                    "example": 12000
                },
                "latitude": {
                    "type": "number",
                    "example": 37.7749
                },
                "longitude": {
                    "type": "number",
                    "example": -122.4194
                },
                "lse_id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "panel_count": {
                    "type": "integer",
                    "example": 30
                },
                "period": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_rep_email": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "system_size": {
                    "type": "number",
                    "example": 10.5
                },
                "target_solar_offset": {
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "service.CustomerStats": {
            "type": "object",
            "properties": {
                "cancelled": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "contracts": {
                    "type": "integer"
                },
                "installations": {
                    "type": "integer"
                },
                "proposals": {
                    "type": "integer"
                },
                "prospects": {
                    "type": "integer"
                },
                "qualified": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "service.QuoteInput": {
            "type": "object",
            "properties": {
                "annualProductionKWh": {
                    "type": "number",
                    "format": "float64"
                },
                "annualUtilityIncrease": {
                    "type": "number",
                    "format": "float64"
                },
                "costPerWatt": {
                    "type": "number",
                    "format": "float64"
                },
                "electricalOffsetPct": {
                    "type": "number",
                    "format": "float64"
                },
                "federalTaxCredit": {
                    "type": "number",
                    "format": "float64"
                },
                "loanInterestRate": {
                    "type": "number",
                    "format": "float64"
                },
                "loanTermYears": {
                    "type": "integer"
                },
                "monthlyElectricBill": {
                    "type": "number",
                    "format": "float64"
                },
                "panelCount": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "systemSizeKW": {
                    "type": "number",
                    "format": "float64"
                },
                "utilityRatePerKWh": {
                    "type": "number",
                    "format": "float64"
                }
            }
        },
        "service.QuoteResult": {
            "type": "object",
            "properties": {
                "annual_production_kwh": {
                    "type": "number"
                },
                "break_even_year": {
                    "type": "integer"
                },
                "cost_per_watt": {
                    "type": "number"
                },
                "current_monthly_bill": {
                    "type": "number"
                },
                "electrical_offset_pct": {
                    "type": "number"
                },
                "estimated_monthly_payment": {
                    "type": "number"
                },
                "estimated_new_monthly_bill": {
                    "type": "number"
                },
                "federal_tax_credit": {
                    "type": "number"
                },
                "first_year_savings": {
                    "type": "number"
                },
                "monthly_savings": {
                    "type": "number"
                },
                "panel_count": {
                    "type": "integer"
                },
                "simple_payback_years": {
                    "type": "number"
                },
                "summary": {
                    "type": "string"
                },
                "system_cost_after_incentives": {
                    "type": "number"
                },
                "system_cost_before_incentives": {
                    "type": "number"
                },
                "system_size_kw": {
                    "type": "number"
                },
                "twenty_five_year_savings": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}