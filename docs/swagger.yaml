definitions:
  handler.AddCompanyRequest:
    properties:
      company_name:
        example: New Solar Company
        type: string
      main_user_id:
        example: 1
        type: integer
    type: object
  handler.AuthResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user: {}
    type: object
  handler.CompaniesResponse:
    properties:
      companies:
        items:
          $ref: '#/definitions/models.Company'
        type: array
      total:
        type: integer
    type: object
  handler.CompanyResponse:
    properties:
      company:
        $ref: '#/definitions/models.Company'
    type: object
  handler.CreateCompanyRequest:
    properties:
      baseline_adder:
        example: 100
        type: number
      code:
        example: ACME
        type: string
      description:
        example: Leading solar company
        type: string
      display_name:
        example: Acme Corporation
        type: string
      logo_path:
        example: https://example.com/logo.png
        type: string
      name:
        example: Acme Corp
        type: string
      sales_commission_default:
        example: 0.1
        type: number
      sales_commission_max:
        example: 0.15
        type: number
      sales_commission_min:
        example: 0.05
        type: number
      slug:
        example: acme-corp
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handler.LeadResponse:
    properties:
      house_id:
        example: 123
        type: integer
      lead_id:
        example: 42
        type: integer
      success:
        example: true
        type: boolean
    type: object
  handler.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    type: object
  handler.RegisterRequest:
    properties:
      address:
        example: 123 Main St, Anytown, USA
        type: string
      company_id:
        example: 1
        type: integer
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: password123
        type: string
      phone:
        example: 555-123-4567
        type: string
    type: object
  handler.UpdateCompanyRequest:
    properties:
      baseline:
        example: 1000
        type: number
      baseline_adder:
        example: 100
        type: number
      baseline_adder_pct_sales_comms:
        example: 10
        type: integer
      code:
        example: ACME
        type: string
      contract_tag:
        example: STANDARD
        type: string
      description:
        example: Leading solar company
        type: string
      display_name:
        example: Acme Corporation
        type: string
      is_active:
        example: true
        type: boolean
      logo_path:
        example: https://example.com/logo.png
        type: string
      name:
        example: Acme Corp
        type: string
      sales_commission_default:
        example: 0.1
        type: number
      sales_commission_max:
        example: 0.15
        type: number
      sales_commission_min:
        example: 0.05
        type: number
      slug:
        example: acme-corp
        type: string
    type: object
  models.Company:
    properties:
      admin_id:
        example: 1
        type: integer
      baseline:
        example: 1000
        type: number
      baseline_adder:
        example: 100
        type: number
      baseline_adder_pct_sales_comms:
        example: 10
        type: integer
      code:
        example: ACME
        type: string
      contract_tag:
        example: STANDARD
        type: string
      created_at:
        type: string
      credits:
        example: 1000
        type: integer
      custom_commissions:
        example: false
        type: boolean
      description:
        example: Leading solar company
        type: string
      display_name:
        example: Acme Corporation
        type: string
      id:
        type: integer
      is_active:
        example: true
        type: boolean
      logo_path:
        example: https://example.com/logo.png
        type: string
      name:
        example: Acme Corp
        type: string
      pricing_mode:
        example: 0
        type: integer
      referred_by_user_id:
        example: 1
        type: integer
      sales_commission_default:
        example: 0.1
        type: number
      sales_commission_max:
        example: 0.15
        type: number
      sales_commission_min:
        example: 0.05
        type: number
      slug:
        example: acme-corp
        type: string
      updated_at:
        type: string
    type: object
  service.CreateLead:
    properties:
      address:
        example: 123 Solar St, San Francisco, CA 94102
        type: string
      city:
        type: string
      company_id:
        example: 1
        type: integer
      consumption:
        items:
          type: integer
        type: array
      creator_id:
        example: 1
        type: integer
      hardware_type:
        type: string
      homeowner_email:
        type: string
      homeowner_name:
        type: string
      homeowner_phone:
        type: string
      kwh_usage:
        example: 12000
        type: number
      latitude:
        example: 37.7749
        type: number
      longitude:
        example: -122.4194
        type: number
      lse_id:
        type: integer
      mode:
        type: string
      panel_count:
        example: 30
        type: integer
      period:
        type: string
      sales_rep_email:
        type: string
      state:
        type: string
      street:
        type: string
      system_size:
        example: 10.5
        type: number
      target_solar_offset:
        type: integer
      unit:
        type: string
      zip:
        type: string
    type: object
  service.QuoteInput:
    properties:
      annualProductionKWh:
        format: float64
        type: number
      annualUtilityIncrease:
        format: float64
        type: number
      costPerWatt:
        format: float64
        type: number
      electricalOffsetPct:
        format: float64
        type: number
      federalTaxCredit:
        format: float64
        type: number
      loanInterestRate:
        format: float64
        type: number
      loanTermYears:
        type: integer
      monthlyElectricBill:
        format: float64
        type: number
      panelCount:
        type: integer
      state:
        type: string
      systemSizeKW:
        format: float64
        type: number
      utilityRatePerKWh:
        format: float64
        type: number
    type: object
  service.QuoteResult:
    properties:
      annual_production_kwh:
        type: number
      break_even_year:
        type: integer
      cost_per_watt:
        type: number
      current_monthly_bill:
        type: number
      electrical_offset_pct:
        type: number
      estimated_monthly_payment:
        type: number
      estimated_new_monthly_bill:
        type: number
      federal_tax_credit:
        type: number
      first_year_savings:
        type: number
      monthly_savings:
        type: number
      panel_count:
        type: integer
      simple_payback_years:
        type: number
      summary:
        type: string
      system_cost_after_incentives:
        type: number
      system_cost_before_incentives:
        type: number
      system_size_kw:
        type: number
      twenty_five_year_savings:
        type: number
    type: object
host: localhost:8080
info:
  contact:
    email: support@sunready.com
    name: API Support
  description: API for Sun Ready project management system
  license:
    name: Sun Ready Private License
    url: INTERNAL
  termsOfService: http://swagger.io/terms/
  title: Sun Ready API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /api/companies:
    get:
      description: Get a list of all companies with optional filtering
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      - description: Filter by referred by user ID
        in: query
        name: referred_by_user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompaniesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all companies
      tags:
      - companies
    post:
      consumes:
      - application/json
      description: Create a new company with the provided details
      parameters:
      - description: Company details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateCompanyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new company
      tags:
      - companies
  /api/companies/{id}:
    delete:
      description: Delete a company by ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete company
      tags:
      - companies
    get:
      description: Get a company by its ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get company by ID
      tags:
      - companies
    put:
      consumes:
      - application/json
      description: Update a company's details
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      - description: Company update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update company
      tags:
      - companies
  /api/companies/add:
    post:
      consumes:
      - application/json
      description: Creates a new company and migrates the main user and their descendants
        to it
      parameters:
      - description: Company and user details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AddCompanyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Add company with user migration
      tags:
      - companies
  /api/companies/all:
    get:
      description: Get all companies without pagination with optional filtering
      parameters:
      - description: Filter by referred by user ID
        in: query
        name: referred_by_user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompaniesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all companies
      tags:
      - companies
  /api/companies/slug/{slug}:
    get:
      description: Get a company by its slug
      parameters:
      - description: Company Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CompanyResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get company by slug
      tags:
      - companies
  /api/leads:
    get:
      description: Retrieves a paginated list of leads
      parameters:
      - description: Filter by company ID
        in: query
        name: company_id
        type: integer
      - description: Filter by creator ID
        in: query
        name: creator_id
        type: integer
      - description: Filter leads with 3D models
        in: query
        name: has_3d_model
        type: boolean
      - default: 20
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of items to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List leads
      tags:
      - leads
    post:
      consumes:
      - application/json
      description: Creates a new lead and optionally initiates 3D model generation
      parameters:
      - description: Lead details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateLead'
      produces:
      - application/json
      responses:
        "201":
          description: Returns lead and house IDs
          schema:
            $ref: '#/definitions/handler.LeadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a new lead
      tags:
      - leads
  /api/leads/{id}:
    delete:
      description: Deletes a lead by ID
      parameters:
      - description: Lead ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete a lead
      tags:
      - leads
    get:
      description: Retrieves a lead by its ID
      parameters:
      - description: Lead ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LeadResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get a lead by ID
      tags:
      - leads
    put:
      consumes:
      - application/json
      description: Updates an existing lead
      parameters:
      - description: Lead ID
        in: path
        name: id
        required: true
        type: integer
      - description: Lead updates
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LeadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update a lead
      tags:
      - leads
  /api/otp/send:
    get:
      consumes:
      - application/json
      description: Sends a one-time password (OTP) via SMS to the specified phone
        number using Twilio.
      parameters:
      - description: Phone number with country code (e.g. +923001234567)
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Missing or invalid phone parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to send OTP
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Send OTP to a phone number
      tags:
      - OTP
  /api/otp/verify:
    get:
      consumes:
      - application/json
      description: Verifies a one-time password (OTP) sent to a phone number.
      parameters:
      - description: Phone number with country code (e.g. +923001234567)
        in: query
        name: phone
        required: true
        type: string
      - description: OTP code received via SMS
        in: query
        name: otp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Missing or invalid parameters / OTP verification failed
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify an OTP code
      tags:
      - OTP
  /api/quote:
    post:
      consumes:
      - application/json
      description: Takes input parameters for a solar system and returns a detailed
        quote with costs, savings, and payback period.
      parameters:
      - description: Quote input payload
        in: body
        name: quote
        required: true
        schema:
          $ref: '#/definitions/service.QuoteInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.QuoteResult'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to calculate quote
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Calculate solar quote
      tags:
      - quote
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
